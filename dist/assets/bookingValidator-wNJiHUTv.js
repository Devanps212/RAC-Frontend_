import{c as p,a as s,u}from"./index.esm-BJ62sI0L.js";const c=e=>{var t,o;const i={};let r=!1;return(((t=e.pickupLocation)==null?void 0:t.trim())===""||!e.pickupLocation)&&(i.pickupLocation="Please submit a proper PickupLocation",r=!0),(((o=e.dropOffLocation)==null?void 0:o.trim())===""||!e.dropOffLocation)&&(i.dropOffLocation="Please submit a proper DropoffLocation",r=!0),(!(e!=null&&e.startDate)||isNaN(new Date(e==null?void 0:e.startDate).getTime()))&&(i.pickupDate="Please submit a valid pickUpTime",r=!0),(!(e!=null&&e.endDate)||isNaN(new Date(e==null?void 0:e.endDate).getTime()))&&(i.dropOffDate="Please submit a valid DropOffDate",r=!0),(!e.pickupTime||e.pickupTime.trim()==="")&&(i.pickupTime="Please submit a valid pickUp time",r=!0),(!e.dropOffTime||e.dropOffTime.trim()==="")&&(i.dropOffTime="Please submit a valid DropOff Time",r=!0),r===!0?(console.log("error:",i),i):null},n={start:new Date().toISOString(),end:new Date().toISOString()},f=p().shape({start:s().required("Please provide a valid start date"),end:s().required("Please provide a valid end date").when("start",([e],i)=>i.test({name:"is-after-start",exclusive:!1,message:"End date must be after start date",test:function(r){return!e||!r?!0:Date.parse(r)>Date.parse(e)}}))}),l=(e,i)=>u({initialValues:{start:n.start.split("T")[0],end:n.end.split("T")[0],...i},validationSchema:f,onSubmit:e});export{l as D,c as b};
